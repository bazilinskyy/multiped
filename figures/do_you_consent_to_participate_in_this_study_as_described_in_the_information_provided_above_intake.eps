%!PS-Adobe-3.0 EPSF-3.0
%%Creator: poppler pdftops version: 25.04.0 (http://poppler.freedesktop.org). PDF Creator: Chromium
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 990 510
%%HiResBoundingBox: 0 0 990 510
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font Verdana
/Verdana_sfnts [
<00010000000b008000030030637674204ca24102000000bc000001986670676d
a092abe6000002540000023a676c796662646480000004900000077068656164
d4133d3200000c0000000036686865610fac09dd00000c3800000024686d7478
28a3041200000c5c0000015c6c6f6361469049c600000db8000000b06d617870
02d702cc00000e6800000020707265700870ef4000000e88000002fc76686561
000208010000118400000024766d747808000000000011a8000000b000>
<061e061405f005d1047c045d03dd00100000ffe7ffe1fe78fe64fe590394001f
0000009600aa00b900c600ce000000000000000000bc00c200000000007600b2
00c000cb0000000000000000000000000081009400a600cc00da00ef00000000
000000000098009e00ab00b000000000000000000000000000900098009e00a4
00a900ae00b300ba00c3000000880091009800a500ac00000000000000000000
006f0087008f009b00a000d3011d00000000000000c3021401c20000000000e9
000c02d10173018e001a002c0044005c0073007e008600b200c8014c001a003d
00440050005c00720078009200b200b900c80000000000000000000000000000
00000000003d0056005d006a006e00b100b900c100000000002a003d00540064
006a00b100b90000000000000071007a008900a100a700bb006f007a00870091
009a000000000000000000000000000000000000008102210221007400e500b9
00ca019502c600ac00a700850614000a000005d1001f0000045d001f00000000
ffe10000fe64fff50000036202f402a2029100af026a004c00>
<401555543736322f2e2d2c26251f141312110d0c0504022c20b0032545234523
61688a204568208a234460442d2c4b525845441b2121592d2c202045684420b0
01602045b0467668188a4560442d2cb0122bb0022545b00225456ab0408b60b0
022523442121212d2cb0132bb0022545b00225456ab8ffc08c60b00225234421
21212d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0
0361592d2cb100032545685458b0032545b0032545606820b004252344b00425
23441bb00325204568208a2344b00325456860b003252344592d2cb003252045
68208a2344b00325456860b0032523442d2cb00943588721c01bb01243588745
b0112bb0472344b0477ae41b038a45186920b04723448a8a8720b0a05158b011
2bb0472344b0477ae41b21b0477ae4595959182d2c4b525845441b2121592d2c
462346608a8a462320468a608a61b8ff8062232010238ab14b4b8a70456020b0
005058b00161b8ffba8b1bb0468c59b0106068013a2d2c2045b003254652583f
1b2111592d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000
621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f
2b59b002602d2c0c6423648bb84000626023212d2cb0134358031b02592d2c4b
53234b515a5820458a60441b2121592d2c4b53234b515a58381b2121592d2cb1
020042b123018851b1400188535a58b910000020885458b20201024360425959
2d2cb0024354584b53234b515a58381b2121591b21212121592d000000>
<00020100000007000600000300070014b706020400060204002fcdddcd002fcd
ddcd3130211121112521112101000600fa800500fb000600fa0080050000000000>
<00050095ffe3080705ed000b000f001b00270033009c40720908060a0918061a
0f351808170a1818171a2908260a2918261a460d480f4035560d580f680e1379
1f7625792b76310425512f034f030203031f5109020f030e082b512019401902
19193151130a4f0c400e020c0e2e2a0016011616282a0c0e060f10401002101c
2a0f00010000222a10062f33ed332f5ded2f5d123939ed332f5ded2f2f5d003f
ed332f5ded3f3f3fed332f5ded5d3130015d0114062322263534363332162501
2309011406232226353436333216013426232206151416333236013426232206
1514163332360374bdb2b6babeb2b5ba02b3fcf4a5030c0285beb2b5babdb2b6
bafabb5964665858666459049359646658586664590434e0dadadfe0dadcc0fa
2f05d1fbcce0dadcdde0dada01b8ac8888adad8787fe17ac8888adad8787000000>
<00020089ffe1048f05ef000b0023008740223601390b340c3b123b18341e4501
490b440c4b124b18441e0c154909022149030a0fb8fff4b60c0c02550f2100b8
fff0b40f0f025500b8fff4401b0b0b025500180c0c0255009e250f251f25021b
0c0c0c02551b2106b8fff040130f0f0255061009090255060c0b0b0255069824
10f62b2b2bed2b5d10f62b2b2bed2b003fed3fed31305d011002212002111012
212012013636353426272626232206070606151416171616333236048ffbfef8
fef4f7fa0109010cf7fef92319192423795f5e7b24221916242179645e7c02e9
fe6ffe89017c018a018d017bfe7ffcb551db9a98e04e4d4e4e4f4aee8e9cd253
4e524e0000>
<000101160000043c05d6000f00884035054606060c030e034801080f111f1102
05021f0f010f0f0c0e0c0c0c02550e0d0c0c06550e20023f036f03700303030c
1010025503b8ffe0400b0f0f025503160909025503b8fff4401d0b0b0255031e
0c0c025503060d0d025503100d0d065503100c0c0655032f2b2b2b2b2b2b2b2b
5d33ed2b2b39322f5d2f335d003ffd323f332fed313021213521112135323637
363637331121043cfcda0136feca3f90252e35049b01309803e6881514194d41
fac2000000>
<00010006000004e605d1000800d4405c2c012c04280735074001400440075007
680470070a16061908270628085606590865066a080808140001000614050405
02000d050200010004000703040107080402050302080f0a1f0a4f0a7f0a0400
5b0107010409090255011404b8ffe2b41010025504b8ffeeb40c0c025504b8ff
feb40f0f025504b8ffe8b40909025504b8fff0b40d0d025504b8fffab40d0d06
5504b8fffa400c0c0c0655045b4f057f050205b8ffeab40d0d0255052f2b5df4
2b2b2b2b2b2b2bed2b3910e45d003f3f1217395d3130015d8710ed8710ed015d
005d01011123110133010104e6fdf4c6fdf2db0197019b05d1fcbcfd73027803
59fd66029a00000000>
<0002006affe60460047c0018001f00c8402726042b0d30043b0d3c1e43044b0d
4b1e5a0d50166a0d6017780d7a1e0e013c1f1f0f1c3d15040bb8ffe840190c0c
06550b0b073f0f090c0c21400909025521400c0c025519b8fff6400d0c0c0255
191a00200c0c025500b8fff440440d0d0655008f210f211f213f21031f010c0c
0c0255010a0c0c0655011b12180b0b025512100909025512080c0c025512040d
0d0255120a0c0c065512020d0d065512852010f62b2b2b2b2b2bfd2b2b325d10
f42b2bed2b2b2b332f003fed332f2b3fed12392fed31305d0121141617161633
3236373315060623200011100033321215272626232206070460fcc93e36348f
5672e7310a5fc66dfeeafec8012bf4e2f5b701939697b30c021b67993130305b
2ccd2836012d011501120142fef8f32a94a2b28400>
<0001006effe503d704780033015340570602091b1502191b26092a2432093c24
42094c245e055d165321562f54326f056c166020642f6532147a057f11742079
28742b8a01880d851a872894019a1b0b000e1829041e0380220122400b0b0255
2222263e1e0407b8ffc0400c0b0b025507070b3e0309210eb8fffa402b090902
55290c0c0c0255290c0c0c0655291b35400c0c0255181009090255180a0c0c02
5518080909065518b8fff6b50c0c0655180eb8fff4b40c0c02550eb8fff4400b
0c0c06550e1b0021180700b8ffeab40b0b025500b8ffeab41010025500b8fff4
400b0909025500140c0c025500b8ffeeb40909065500b8fff8b40c0c065500b8
fff840270d0d0655008e350f351f353f355f357f350507160b0b025507160909
0655071a0c0c065507863410e62b2b2b5d10e62b2b2b2b2b2b2b11393910ed2b
2b2f2b2b2b2b2bed2b2b2b2f003fed332f2b3fed332f2b5d1112173931305d01
5d01140623222627353316163332363534272627262627262635343637363633
32161715232626232206151417161716161716171603d7fddb7ccf460a59da64
7c8c26266c288135937b393a38ad6b64cd440a48ce63678e2b2a5e34812b8347
47014299c43b23d3434f50564222221809180e27976e457a302f373123c93549
4f4e452323160c180a1e494a00>
<000100000005028fa44db7685f0f3cf5001b080000000000aa7e442900000000
c2c3abe8fc0bfd930b93080100000009000200000000000000>
<00010000080bfe5200000c2cfc0bff070b930001000000000000000000000000
0000005700>
<0800010000000000000000000000000000000000000000000000000000000000
089c009500000000000000000000000000000000000000000000000000000000
0000000000000000000000000516008905160116000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000004ec0006000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
04c4006a00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000042b006e00>
<00000020002000200020002000200020002000c000c000c000c000c000c000c0
00c000c000c000c0014201a401a401a401a401a401a401a401a401a401a401a4
01a401a401a401a401a401a401a401a401a401a401a401a401a401a401a401a4
01a401a401a401a401a401a401a401a401a401a401a401a401a4022802280228
02280228022802280228022802280228022802c202c202c202c202c202c202c2
02c202c202c202c202c202c202c203b800>
<00010000005700670007006b000500020010002f00560000020a01c80003000100>
<b90054ffc0401eb229323610b220b240b250b270b280b2a0b2b0b2d0b2e0b20a
c0b2f0b202b8ffc04070b51718361f44010f561f56024f555f55026f54019f54
af54025153170452531604535215044a49520446493704474932044849320449
3539043c3f32043d3f3d043e3f2104433f1d04423f5204413f5204403f52043f
35320432336404333534043534540434351e04d034e034f03403b8ffeeb3b425
4836b8ffe0b3b4102336b8ffee400db4090f36b41a480476b386b302b8fff0b3
b3254836b8fffa40ffb3092436b314480489881304706c7078020f9cdf9e0240
9d161936409c161b3640971719364096171b368685131f0f840f850f8e0f8f0f
901f841f8e1f8f2f8e808580888f919085908790880f40820910360f721f7202
4071090c360f6d0120c80120c7013fc6efc60220c540c5020062010062106202
4061a061020f5b012d1411042c1425042b1439042a141304291415041f141e04
2120430420143c04c91a45041a1b47041b1a3c041a1432041514390413144804
12141a0411141a0470140140144143360f0e2a1f0006010dc34b1f0cc24b1f0a
c04b1f09c04b1f05bc4b1f04bd4b1f03b94b1f02ba4b1f01b64b1f00b74b1fc3
c22a1fc0bf2a1fbd4056bc211fbab9211fb7b6211fc2c3c40dbfc0c10dbcbdbe
0cb9babb0cb6b7b80c10bc80bc0240b980b9020fb63fb64fb67fb6040fb62fb6
3fb66fb67fb6bfb6cfb6ffb6080a0937040c0d02050402030202010002500501
b801ff01b0124b004b5442b013014b004b5342b109322b4bb0645242858d8d1d
b0964b5258b0801d59b808004b5458b001b0018e59b0084b5358b001b0018e59
002b2b2b2b2b737473732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb003
45b006456861b006234473b00345b00e456861b00e2344b00e45b00f456861b0
0f23442b01b0144568b01423442b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73
73737373737373732b732b732b2b2b2b2b73732b2b2b2b732b2b2b2b00752b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73747373742b73742b2b00>
<0001000000000000000008000000000000000000000100000000000000000000
0000000100>
<0800000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000>
] def
10 dict begin
/FontName /Verdana_00 def
/FontType 42 def
/FontMatrix [1 0 0 1 0 0] def
/FontBBox [-1013 -621 2963 2049] def
/PaintType 0 def
/sfnts Verdana_sfnts def
/Encoding 256 array
dup 0 /c00 put
dup 1 /c01 put
dup 2 /c02 put
dup 3 /c03 put
dup 4 /c04 put
dup 5 /c05 put
dup 6 /c06 put
dup 7 /c07 put
dup 8 /c08 put
dup 9 /c09 put
dup 10 /c0a put
dup 11 /c0b put
dup 12 /c0c put
dup 13 /c0d put
dup 14 /c0e put
dup 15 /c0f put
dup 16 /c10 put
dup 17 /c11 put
dup 18 /c12 put
dup 19 /c13 put
dup 20 /c14 put
dup 21 /c15 put
dup 22 /c16 put
dup 23 /c17 put
dup 24 /c18 put
dup 25 /c19 put
dup 26 /c1a put
dup 27 /c1b put
dup 28 /c1c put
dup 29 /c1d put
dup 30 /c1e put
dup 31 /c1f put
dup 32 /c20 put
dup 33 /c21 put
dup 34 /c22 put
dup 35 /c23 put
dup 36 /c24 put
dup 37 /c25 put
dup 38 /c26 put
dup 39 /c27 put
dup 40 /c28 put
dup 41 /c29 put
dup 42 /c2a put
dup 43 /c2b put
dup 44 /c2c put
dup 45 /c2d put
dup 46 /c2e put
dup 47 /c2f put
dup 48 /c30 put
dup 49 /c31 put
dup 50 /c32 put
dup 51 /c33 put
dup 52 /c34 put
dup 53 /c35 put
dup 54 /c36 put
dup 55 /c37 put
dup 56 /c38 put
dup 57 /c39 put
dup 58 /c3a put
dup 59 /c3b put
dup 60 /c3c put
dup 61 /c3d put
dup 62 /c3e put
dup 63 /c3f put
dup 64 /c40 put
dup 65 /c41 put
dup 66 /c42 put
dup 67 /c43 put
dup 68 /c44 put
dup 69 /c45 put
dup 70 /c46 put
dup 71 /c47 put
dup 72 /c48 put
dup 73 /c49 put
dup 74 /c4a put
dup 75 /c4b put
dup 76 /c4c put
dup 77 /c4d put
dup 78 /c4e put
dup 79 /c4f put
dup 80 /c50 put
dup 81 /c51 put
dup 82 /c52 put
dup 83 /c53 put
dup 84 /c54 put
dup 85 /c55 put
dup 86 /c56 put
readonly def
/CharStrings 257 dict dup begin
/.notdef 0 def
/c00 0 def
/c01 1 def
/c02 2 def
/c03 3 def
/c04 4 def
/c05 5 def
/c06 6 def
/c07 7 def
/c08 8 def
/c09 9 def
/c0a 10 def
/c0b 11 def
/c0c 12 def
/c0d 13 def
/c0e 14 def
/c0f 15 def
/c10 16 def
/c11 17 def
/c12 18 def
/c13 19 def
/c14 20 def
/c15 21 def
/c16 22 def
/c17 23 def
/c18 24 def
/c19 25 def
/c1a 26 def
/c1b 27 def
/c1c 28 def
/c1d 29 def
/c1e 30 def
/c1f 31 def
/c20 32 def
/c21 33 def
/c22 34 def
/c23 35 def
/c24 36 def
/c25 37 def
/c26 38 def
/c27 39 def
/c28 40 def
/c29 41 def
/c2a 42 def
/c2b 43 def
/c2c 44 def
/c2d 45 def
/c2e 46 def
/c2f 47 def
/c30 48 def
/c31 49 def
/c32 50 def
/c33 51 def
/c34 52 def
/c35 53 def
/c36 54 def
/c37 55 def
/c38 56 def
/c39 57 def
/c3a 58 def
/c3b 59 def
/c3c 60 def
/c3d 61 def
/c3e 62 def
/c3f 63 def
/c40 64 def
/c41 65 def
/c42 66 def
/c43 67 def
/c44 68 def
/c45 69 def
/c46 70 def
/c47 71 def
/c48 72 def
/c49 73 def
/c4a 74 def
/c4b 75 def
/c4c 76 def
/c4d 77 def
/c4e 78 def
/c4f 79 def
/c50 80 def
/c51 81 def
/c52 82 def
/c53 83 def
/c54 84 def
/c55 85 def
/c56 86 def
end readonly def
FontName currentdict end definefont pop
16 dict begin
/FontName /Verdana def
/FontType 0 def
/FontMatrix [1 0 0 1 0 0] def
/FMapType 2 def
/Encoding [
0
] def
/FDepVector [
/Verdana_00 findfont
] def
FontName currentdict end definefont pop
%%EndResource
/F4_0 /Verdana 0 pdfMakeFont16
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 990 510 re
W
q
[0.24 0 0 -0.24 0 510] cm
q
0 0 4125 2125 re
W*
q
[3.125 0 0 3.125 0 0] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
0 0 1320 680 re
f
Q
Q
q
0 0 4125 2125 re
W*
q
[3.125 0 0 3.125 0 0] cm
/DeviceRGB {} CS
[0.3882 0.4314 0.9804] SC
/DeviceRGB {} cs
[0.3882 0.4314 0.9804] sc
615 40 m
620.15521 40 625.30737 40.126476 630.45636 40.379433 c
635.60535 40.632389 640.745 41.011517 645.87537 41.516815 c
651.0058 42.02211 656.12067 42.652969 661.22003 43.409397 c
666.31946 44.165825 671.39722 45.046902 676.45337 46.052635 c
681.50946 47.058365 686.5379 48.187538 691.5387 49.440151 c
696.53937 50.692764 701.50635 52.067314 706.43964 53.563793 c
711.37286 55.060272 716.26642 56.676876 721.12024 58.413612 c
725.97412 60.150349 730.78247 62.005127 735.54523 63.97794 c
740.30804 65.950752 745.01959 68.039223 749.67987 70.243362 c
754.34015 72.447495 758.94354 74.764633 763.49005 77.194786 c
768.0365 79.624931 772.52063 82.165161 776.94238 84.815468 c
781.3642 87.465775 785.71826 90.222969 790.00464 93.087051 c
794.29102 95.951134 798.50458 98.918655 802.64532 101.989616 c
806.78601 105.060562 810.84888 108.231255 814.83392 111.501694 c
818.81897 114.772125 822.72137 118.138351 826.54114 121.60038 c
830.36084 125.062408 834.09332 128.616074 837.73865 132.261353 c
841.38391 135.906631 844.93756 139.63916 848.3996 143.458908 c
851.86163 147.278656 855.22791 151.181061 858.49835 155.166107 c
861.76868 159.151138 864.93933 163.213989 868.01031 167.354691 c
871.08124 171.49539 874.04877 175.70895 876.9129 179.99536 c
879.77698 184.28175 882.53412 188.63585 885.18445 193.05762 c
887.83472 197.47939 890.37494 201.96353 892.80518 206.51003 c
895.23529 211.0565 897.55243 215.65987 899.75659 220.32013 c
901.96075 224.98039 904.04919 229.69191 906.02203 234.4547 c
907.99487 239.21748 909.84961 244.0258 911.58636 248.87967 c
913.32306 253.73351 914.9397 258.62704 916.43622 263.5603 c
917.93274 268.4935 919.30725 273.46048 920.55981 278.46121 c
921.81244 283.46191 922.94159 288.49033 923.94727 293.54651 c
924.95306 298.60269 925.83417 303.68048 926.59058 308.77991 c
927.34698 313.8793 927.97791 318.99423 928.48322 324.12463 c
928.98853 329.255 929.36761 334.39468 929.62054 339.5437 c
929.87347 344.69269 929.99994 349.84479 930 355 c
929.99994 360.15518 929.87347 365.30728 929.62054 370.4563 c
929.36761 375.60532 928.98853 380.745 928.48322 385.8754 c
927.97791 391.00577 927.34698 396.12067 926.59058 401.22006 c
925.83417 406.31946 924.95306 411.39725 923.94727 416.4534 c
922.94159 421.50955 921.81244 426.53799 920.55981 431.5387 c
919.30725 436.5394 917.93274 441.50638 916.43622 446.43961 c
914.9397 451.3728 913.32306 456.26636 911.58636 461.12021 c
909.84961 465.97406 907.99487 470.78241 906.02203 475.5452 c
904.04919 480.30798 901.96075 485.0195 899.75659 489.67975 c
897.55243 494.34 895.23535 498.94339 892.80524 503.4899 c
890.37506 508.03638 887.83478 512.52051 885.18445 516.94226 c
882.53418 521.36401 879.77704 525.71808 876.91296 530.00452 c
874.04889 534.29095 871.08136 538.50446 868.01044 542.64514 c
864.93945 546.78595 861.7688 550.84882 858.49841 554.83386 c
855.22791 558.81891 851.86163 562.72125 848.3996 566.54102 c
844.93756 570.36078 841.38391 574.09332 837.73865 577.73859 c
834.09332 581.38385 830.36084 584.9375 826.54114 588.39954 c
822.72137 591.86157 818.81897 595.22778 814.83392 598.49823 c
810.84888 601.76868 806.78595 604.93939 802.64526 608.01031 c
798.50452 611.0813 794.29095 614.04877 790.00458 616.91284 c
785.7182 619.77692 781.36414 622.53412 776.94232 625.18445 c
772.52063 627.83478 768.0365 630.375 763.48999 632.80511 c
758.94354 635.23523 754.34015 637.55243 749.67981 639.75659 c
745.01959 641.96069 740.30804 644.04913 735.54523 646.02197 c
730.78247 647.99481 725.97412 649.84955 721.12024 651.5863 c
716.26642 653.32306 711.37286 654.9397 706.43964 656.43616 c
701.50635 657.93262 696.53937 659.30719 691.53864 660.55981 c
686.5379 661.81244 681.50946 662.94159 676.45337 663.94733 c
671.39722 664.953 666.31946 665.83411 661.22003 666.59052 c
656.12067 667.34692 651.0058 667.97784 645.87537 668.48315 c
640.745 668.9884 635.60535 669.36755 630.45636 669.62054 c
625.30737 669.87347 620.15521 669.99994 615 670 c
609.84479 669.99994 604.69269 669.87347 599.5437 669.62054 c
594.39471 669.36755 589.255 668.9884 584.12463 668.48315 c
578.99426 667.97784 573.87933 667.34692 568.77991 666.59052 c
563.68048 665.83411 558.60272 664.953 553.54651 663.94733 c
548.4903 662.94159 543.46185 661.81244 538.46112 660.55981 c
533.46039 659.30719 528.49341 657.93262 523.56024 656.43616 c
518.62701 654.9397 513.73346 653.32306 508.87961 651.5863 c
504.02576 649.84955 499.21747 647.99481 494.45468 646.02197 c
489.69189 644.04913 484.98035 641.96069 480.3201 639.75659 c
475.65985 637.55243 471.05649 635.23523 466.51001 632.80511 c
461.9635 630.375 457.47937 627.83478 453.05759 625.18445 c
448.6358 622.53412 444.28171 619.77692 439.9953 616.91284 c
435.70889 614.04877 431.49536 611.0813 427.35468 608.01031 c
423.21396 604.93939 419.15109 601.76868 415.16608 598.49823 c
411.18103 595.22778 407.27863 591.86157 403.45889 588.39954 c
399.6391 584.9375 395.90659 581.38385 392.26132 577.73859 c
388.61603 574.09332 385.06238 570.36078 381.60037 566.54102 c
378.13837 562.72125 374.77213 558.81885 371.50171 554.8338 c
368.23123 550.84875 365.06055 546.78589 361.98959 542.64514 c
358.91864 538.50446 355.95111 534.29095 353.08704 530.00452 c
350.22296 525.71814 347.46579 521.36407 344.81549 516.94232 c
342.16519 512.52057 339.62494 508.03641 337.19479 503.4899 c
334.76465 498.94339 332.44748 494.34003 330.24335 489.67978 c
328.03922 485.01953 325.95071 480.30801 323.97791 475.54523 c
322.0051 470.78244 320.1503 465.97409 318.41357 461.12024 c
316.67685 456.26639 315.06024 451.37283 313.56378 446.43964 c
312.06729 441.50641 310.69272 436.53943 309.44012 431.5387 c
308.18747 426.53799 307.05829 421.50955 306.05258 416.4534 c
305.04688 411.39725 304.1658 406.31946 303.40936 401.22006 c
302.65292 396.12067 302.02206 391.00577 301.51678 385.8754 c
301.01151 380.745 300.63239 375.60532 300.37946 370.45633 c
300.1265 365.30731 300 360.15518 300 355 c
300 349.84479 300.1265 344.69269 300.37946 339.5437 c
300.63239 334.39468 301.01151 329.255 301.51678 324.12463 c
302.02206 318.99423 302.65292 313.8793 303.40936 308.77991 c
304.1658 303.68048 305.04688 298.60269 306.05258 293.54651 c
307.05829 288.49033 308.18747 283.46191 309.44009 278.46121 c
310.69272 273.46048 312.06729 268.4935 313.56378 263.5603 c
315.06024 258.62704 316.67685 253.73351 318.41357 248.87967 c
320.1503 244.0258 322.0051 239.21748 323.97791 234.4547 c
325.95071 229.69191 328.03922 224.98039 330.24335 220.32013 c
332.44748 215.65987 334.76465 211.0565 337.19479 206.51001 c
339.62494 201.96352 342.16519 197.47939 344.81549 193.05762 c
347.46579 188.63585 350.22296 184.28175 353.08704 179.99536 c
355.95111 175.70895 358.91864 171.49539 361.98962 167.354691 c
365.06055 163.213989 368.23123 159.151138 371.50171 155.166107 c
374.77213 151.181061 378.13837 147.278656 381.6004 143.458908 c
385.06241 139.63916 388.61603 135.906631 392.26132 132.261353 c
395.90659 128.616074 399.6391 125.062416 403.45889 121.600388 c
407.27863 118.138359 411.18103 114.772125 415.16611 111.501701 c
419.15112 108.23127 423.21399 105.060577 427.35468 101.989624 c
431.49536 98.918663 435.70889 95.951141 439.9953 93.087059 c
444.28171 90.222977 448.6358 87.465782 453.05759 84.815475 c
457.47937 82.165169 461.9635 79.624939 466.51001 77.194794 c
471.05649 74.764641 475.65985 72.447502 480.3201 70.243362 c
484.98035 68.039223 489.69186 65.950752 494.45465 63.97794 c
499.21744 62.005127 504.02576 60.150352 508.87958 58.413616 c
513.73346 56.67688 518.62701 55.060276 523.56024 53.563797 c
528.49341 52.067318 533.46039 50.692768 538.46112 49.440151 c
543.46185 48.187538 548.4903 47.058365 553.54651 46.052635 c
558.60272 45.046902 563.68048 44.165825 568.77991 43.409397 c
573.87933 42.652969 578.99426 42.02211 584.12463 41.516815 c
589.255 41.011517 594.39471 40.632389 599.5437 40.379433 c
604.69269 40.126476 609.84479 40 615 40 c
h
f
Q
q
[3.125 0 0 3.125 1921.875 1124.21875] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 -1 -17.900391 0] Tm
0 0 Td
/F4_0 12 Tf
(\000\024\000\023\000\023\000\010)
[7.628906
0
7.628906
0
7.628906
0
12.914063
0] Tj
Q
q
[3.125 0 0 3.125 3888.1248 125] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
0 0 66 29 re
f
Q
Q
q
3888.1248 125 206.25 90.625 re
W*
q
[3.125 0 0 3.125 3888.1248 170.3125] cm
/DeviceRGB {} CS
[0.1647 0.2471 0.3725] SC
/DeviceRGB {} cs
[0.1647 0.2471 0.3725] sc
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 -1 40 4.68] Tm
0 0 Td
/F4_0 12 Tf
(\000<\000H\000V)
[7.382813
0
7.148438
0
6.251953
0] Tj
Q
q
[3.125 0 0 3.125 3950.6248 170.3125] cm
/DeviceRGB {} CS
[0.3882 0.4314 0.9804] SC
/DeviceRGB {} cs
[0.3882 0.4314 0.9804] sc
-6 -6 12 12 re
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font Verdana
%%EOF
